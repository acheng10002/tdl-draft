/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/config.js":
/*!***********************!*\
  !*** ./src/config.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buttons: () => (/* binding */ buttons),\n/* harmony export */   firstThreeTaskFields: () => (/* binding */ firstThreeTaskFields),\n/* harmony export */   newProjectFieldAttributes: () => (/* binding */ newProjectFieldAttributes),\n/* harmony export */   priorityTaskField: () => (/* binding */ priorityTaskField),\n/* harmony export */   priorityTaskFieldLabel: () => (/* binding */ priorityTaskFieldLabel),\n/* harmony export */   projectsListAttributes: () => (/* binding */ projectsListAttributes),\n/* harmony export */   projectsListText: () => (/* binding */ projectsListText),\n/* harmony export */   statusTaskField: () => (/* binding */ statusTaskField),\n/* harmony export */   titles: () => (/* binding */ titles)\n/* harmony export */ });\nconst projectsListText = {\n    p1: \"Project 1\",\n    p2: \"Project 2\",\n    p3: \"Project 3\",\n    p4: \"Project 4\",\n    p5: \"Project 5\",\n    p6: \"Project 6\",\n    p7: \"Project 7\",\n    p8: \"Project 8\",\n    p9: \"Project 9\"\n}\n\nconst titles = {\n    'projects-title': {\n        position: \"left\",\n        image: \"./img/folders-multiple.svg\",\n        alt: \"multiple folders icon\",\n        'text-class': \"projects-title-text\",\n        text: \"Projects\"\n\n    },\n    // 'project-title': {\n    //     position: \"middle\",\n    //     image: \"./img/folder-arrow-down.svg\",\n    //     alt: \"arrow pointing right icon\",\n    //     text: projectsListText[1],\n    //     id: \"tasks-list-project\"\n    // },\n    'each-task-title': {\n        position: \"right\",\n        image: \"./img/calendar-check.svg\",\n        alt: \"calendar with check mark icon\",\n        text: \"Task\"\n    }\n}\n\n\nconst buttons = {\n    'new-project': {\n        position: \"left\",\n        id: \"new-project\",\n        text: \"+ New Project\"\n    },\n    'new-task': {\n        position: \"middle\",\n        id: \"new-task\",\n        text: \"+ New Task\"\n    },\n    'save-task': {\n        position: \"right\",\n        id: \"save-task\",\n        text: \"Save\"\n    }\n\n}\n\n\nconst projectsListAttributes =  {\n    image: \"./img/arrow-right.svg\",\n    alt: \"arrow pointing right\"\n}\n \n\nconst newProjectFieldAttributes = {\n    for: \"add-new-project\",\n    type: \"text\",\n    id: \"add-new-project\",\n    placeholder: \"+ New Project\"\n}\n\n\n/* \nformData = {\n    'person1': {\n        'Name': 'John Doe',\n        'Email': 'john.doe@example.com',\n        'Comment': 'This is a test comment.',\n        'Country': 'USA'\n    },\n    'person2': {\n        'Name': 'Jane Doe',\n        'Email': 'john.doe@example.com',\n        'Comment': 'This is a test comment.',\n        'Country': 'USA'\n    },\n    'person3': {\n        'Name': 'Jack Doe',\n        'Email': 'john.doe@example.com',\n        'Comment': 'This is a test comment.',\n        'Country': 'USA'\n    }\n}\n*/\n\n\nconst firstThreeTaskFields = {\n    'task-field': {\n        for: \"each-task\",\n        'label-id': \"each-task-label\",\n        'label-text': \"Task Title:\",\n        type: \"text\",\n        'input-id': \"each-task\"\n    },\n    'duedate-field': {\n        for: \"task-duedate\",\n        'label-id': \"task-duedate-label\",\n        'label-text': \"Task Due Date:\",\n        type: \"date\",\n        'input-id': \"task-duedate\"\n\n    },\n    'description-field': {\n        for: \"task-description\",\n        'label-id': \"task-description-label\",\n        'label-text': \"Task Description:\",\n        name: \"task-textarea\",\n        'textarea-id': \"task-description\"\n    }\n}\n\n\nconst priorityTaskFieldLabel = {\n    for: \"task-priority\",\n    'label-id': \"task-priority-label\",\n    'label-text': \"Priority:\" \n}\n\n\nconst priorityTaskField = {\n    input1: {\n        type: \"radio\",\n        name: \"priority\",\n        id: \"high\",\n        value: \"high\",\n        for: \"high\",\n        'label-text': \"High\",\n        class: \"priority\",\n        'data-color': \"red\",\n    },\n    input2: {\n        type: \"radio\",\n        name: \"priority\",\n        id: \"medium\",\n        value: \"medium\",\n        for: \"medium\",\n        'label-text': \"Medium\",\n        class: \"priority\",\n        'data-color': \"yellow\",\n\n    },\n    input3: {\n        type: \"radio\",\n        name: \"priority\",\n        id: \"low\",\n        value: \"low\",\n        for: \"low\",\n        'label-text': \"Low\",\n        class: \"priority\",\n        'data-color': \"green\",\n\n    }\n}\n\n\nconst statusTaskField = {\n        class: \"status-field\",\n        for: \"status-dropdown\",\n        'label-id': \"task-status-label\",\n        'label-text': \"Status:\",\n        name: \"status\",\n        'select-id': \"status-dropdown\", \n        options: [\n            {\n                value: \"Not Started\",\n                text: \"Not Started\"\n            },\n            {\n                value: \"In Progress\",\n                text: \"In Progress\",\n            },\n            {\n                value: \"Complete\",\n                text: \"Complete\"\n            }\n        ]\n}\n\n\n\n//# sourceURL=webpack://todo-list/./src/config.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ \"./src/config.js\");\n/* harmony import */ var _page_load2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./page_load2.js */ \"./src/page_load2.js\");\n\n\n\n\nconst pageInfo = document.querySelector('div');\n\npageInfo.id = 'content';\n\nconst processedDate = (0,_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.prepareDate)();\n(0,_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.createAndAppendDate)(processedDate, pageInfo);\n\nconst processedTitles = (0,_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.prepareObjectData)(_config_js__WEBPACK_IMPORTED_MODULE_0__.titles, _page_load2_js__WEBPACK_IMPORTED_MODULE_1__.prepareTitleData);\n(0,_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.createAndAppendTitles)(processedTitles, pageInfo);\n\n(0,_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.createAndAppendProjectsListAndField)(_config_js__WEBPACK_IMPORTED_MODULE_0__.projectsListText, _config_js__WEBPACK_IMPORTED_MODULE_0__.projectsListAttributes, _config_js__WEBPACK_IMPORTED_MODULE_0__.newProjectFieldAttributes, pageInfo);\n\n(0,_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.selectProject)(pageInfo);\n\nconst processedButtons = (0,_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.prepareObjectData)(_config_js__WEBPACK_IMPORTED_MODULE_0__.buttons, _page_load2_js__WEBPACK_IMPORTED_MODULE_1__.prepareButtonData);\n(0,_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.createAndAppendButtons)(processedButtons, pageInfo);\n\n// const processedTasksTitleAndListData = prepareObjectData(Project1, prepareTasksTitleAndListData);\n(0,_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.createAndAppendTasksTitleAndList)(_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.Project1, pageInfo);\n\nconst processedThreeTaskFields = (0,_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.prepareObjectData)(_config_js__WEBPACK_IMPORTED_MODULE_0__.firstThreeTaskFields, _page_load2_js__WEBPACK_IMPORTED_MODULE_1__.prepareThreeTaskFieldsData);\nconst processedPriorityTaskField = (0,_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.prepareObjectData)(_config_js__WEBPACK_IMPORTED_MODULE_0__.priorityTaskField, _page_load2_js__WEBPACK_IMPORTED_MODULE_1__.preparePriorityTaskFieldData)\n;(0,_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.createAndAppendTaskFields)(processedThreeTaskFields, _config_js__WEBPACK_IMPORTED_MODULE_0__.priorityTaskFieldLabel, processedPriorityTaskField, pageInfo);\n\n(0,_page_load2_js__WEBPACK_IMPORTED_MODULE_1__.createAndAppendStatusTaskField)(_config_js__WEBPACK_IMPORTED_MODULE_0__.statusTaskField);\n\nvar taskEditDivs = document.getElementsByClassName('task-edit');\n\nArray.from(taskEditDivs).forEach(function(div) {\n    div.addEventListener('click', _page_load2_js__WEBPACK_IMPORTED_MODULE_1__.switchStylesheet)\n});\n\nvar newTaskButton = document.getElementById('new-task');\n\nnewTaskButton.addEventListener('click', _page_load2_js__WEBPACK_IMPORTED_MODULE_1__.createNewTask);\n\n// document.getElementsByClassName('task-edit').addEventListener('click', function() {\n//     var stylesheet = document.getElementById('stylesheetToSwitch');\n//     if (stylesheet.href.endsWith('style2.css')) {\n//         stylesheet.href = 'style.css';\n//     } else {\n//         stylesheet.href = 'style2.css';\n//     }\n\n//     window.location.reload();\n// });\n\n/* import { titles, buttons, projectsListText, fieldAtts, projectsListAtts, project1Tasks, threeTaskFields, labelTaskField, oneTaskField } from './config.js';\n\nimport { prepareDate, createAndAppendDate, prepareTitleData, createAndAppendTitles, prepareButtonData, createAndAppendButtons, prepareProjectsListData, prepareFieldAttributesData, createAndAppendProjectsListAndField, prepareTasksListData, createAndAppendTasksList, prepareThreeTaskFieldsData, prepareOneTaskFieldData, createAndAppendTaskFields } from './page_load.js';\n\nconst pageInfo = document.querySelector('div');\n\npageInfo.id = 'content';\n\nconst processedDate = prepareDate();\ncreateAndAppendDate(processedDate, pageInfo);\n\nconst processedTitles = prepareTitleData(titles);\ncreateAndAppendTitles(processedTitles, pageInfo);\n\nconst processedProjectsList = prepareProjectsListData(projectsListText);\nconst processedFieldAtts = prepareFieldAttributesData(fieldAtts);\ncreateAndAppendProjectsListAndField(processedProjectsList, projectsListAtts, processedFieldAtts, pageInfo);\n\nconst processedButtons = prepareButtonData(buttons);\ncreateAndAppendButtons(processedButtons, pageInfo);\n\nconst processedTasksListData = prepareTasksListData(project1Tasks);\ncreateAndAppendTasksList(processedTasksListData, pageInfo);\n\nconst processedThreeTaskFields = prepareThreeTaskFieldsData(threeTaskFields);\nconst processedOneTaskField = prepareOneTaskFieldData(oneTaskField)\ncreateAndAppendTaskFields(processedThreeTaskFields, labelTaskField, processedOneTaskField, pageInfo); */\n\n\n\n\n\n\n//# sourceURL=webpack://todo-list/./src/index.js?");

/***/ }),

/***/ "./src/page_load2.js":
/*!***************************!*\
  !*** ./src/page_load2.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Project1: () => (/* binding */ Project1),\n/* harmony export */   Project2: () => (/* binding */ Project2),\n/* harmony export */   Project3: () => (/* binding */ Project3),\n/* harmony export */   Project4: () => (/* binding */ Project4),\n/* harmony export */   Project5: () => (/* binding */ Project5),\n/* harmony export */   Project6: () => (/* binding */ Project6),\n/* harmony export */   Project7: () => (/* binding */ Project7),\n/* harmony export */   Project8: () => (/* binding */ Project8),\n/* harmony export */   Project9: () => (/* binding */ Project9),\n/* harmony export */   createAndAppendButtons: () => (/* binding */ createAndAppendButtons),\n/* harmony export */   createAndAppendDate: () => (/* binding */ createAndAppendDate),\n/* harmony export */   createAndAppendProjectsListAndField: () => (/* binding */ createAndAppendProjectsListAndField),\n/* harmony export */   createAndAppendStatusTaskField: () => (/* binding */ createAndAppendStatusTaskField),\n/* harmony export */   createAndAppendTaskFields: () => (/* binding */ createAndAppendTaskFields),\n/* harmony export */   createAndAppendTasksTitleAndList: () => (/* binding */ createAndAppendTasksTitleAndList),\n/* harmony export */   createAndAppendTitles: () => (/* binding */ createAndAppendTitles),\n/* harmony export */   createNewTask: () => (/* binding */ createNewTask),\n/* harmony export */   prepareButtonData: () => (/* binding */ prepareButtonData),\n/* harmony export */   prepareDate: () => (/* binding */ prepareDate),\n/* harmony export */   prepareObjectData: () => (/* binding */ prepareObjectData),\n/* harmony export */   preparePriorityTaskFieldData: () => (/* binding */ preparePriorityTaskFieldData),\n/* harmony export */   prepareThreeTaskFieldsData: () => (/* binding */ prepareThreeTaskFieldsData),\n/* harmony export */   prepareTitleData: () => (/* binding */ prepareTitleData),\n/* harmony export */   selectProject: () => (/* binding */ selectProject),\n/* harmony export */   switchStylesheet: () => (/* binding */ switchStylesheet)\n/* harmony export */ });\nfunction prepareDate() {\n    return new Date().toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric', weekday: 'long' });\n}\n\n\nfunction createAndAppendDate(dateData, container) {\n    const dateDiv = createElement('div', {\n        className: \"section date middle\",\n        textContent: dateData\n    });\n\n    container.appendChild(dateDiv);\n}\n\n\n/* takes in an object and a prepareData function\n   iteratively, prepareData function processes an object and then pushes the processed data into an array */\nfunction prepareObjectData(obj, prepareFunction) {\n    const processedData = [];\n\n    /* when obj is an object made up of objects, \n       loops through the objects, and\n       each object with a key is assigned to variable called item */\n    for (const key in obj) {\n        const item = obj[key];\n        processedData.push(prepareFunction(key, item));\n    }\n    return processedData;\n}\n\n\n// a prepareData function\nfunction prepareTitleData(key, item) {\n    return {\n        classes: [\"section\", key, item.position],\n        imageSrc: item.image,\n        imageAlt: item.alt,\n        textContent: item.text,\n        textClass: item['text-class'],\n        // id: item['id']\n    };     \n}\n\n/* utility function that creates HTML elements \n   type is the type of HTML element to be created\n   properties is an object containing key-value pairs where keys are property names and \n   values are the values for those properties to be set on the element \n   rest parameter that allows for an indefinite number of arguments representing child elements \n        the rest parameter arguments are treated as an array inside the function */\nfunction createElement(type, properties, ...children) {\n    const element = document.createElement(type);\n\n    // iterates over each key in the properties object\n    for (const key in properties) {\n\n        /* for each key, set the corresponding property value on the element\n           ex. if properties is {id: myElement, className: myClass, \n           element will have its id set to myElement and its className set to myClass */\n        element[key] = properties[key];\n    }\n\n    /* iterates over the children array, and for each child,\n       appends the child to the element */\n    children.forEach(child => element.appendChild(child));\n\n    return element;\n}\n\n\nfunction createAndAppendTitles(titlesData, container) {\n    /* iterates over an array of objects, each object includes the \n       title's image data, alt text data, and text content */\n    titlesData.forEach(data => {\n\n        /* creates a div element, and sets its classes by joining all class names \n           provided in data.classes with a space between them */\n        const titleDiv = createElement('div', {className: data.classes.join(' ')});\n\n        // creates an img element, and sets its src and alt attributes according to the data object \n        const img = createElement('img', {\n            src: data.imageSrc, \n            alt: data.imageAlt\n        });\n\n        /* textDivClasses stores the class names for the text div\n           if data.textClass exists, uses that value as text content,\n           otherwise, defaults to an empty string as text content */\n        //    const textDivClasses = \n        data.textClass ? `${data.textClass}` : '';\n\n        /* creates a div for the text content and sets the div's classes and text content \n           trim() removes whitespace from both ends of a string */\n        const textDiv = createElement('div', {\n            textContent: data.textContent\n        });\n\n        if (data.id) {\n            textDiv.id = data.id;\n        }\n\n        titleDiv.appendChild(img);\n        titleDiv.appendChild(textDiv);\n\n        container.appendChild(titleDiv);\n    });\n}\n\n\n// a prepareData function\nfunction prepareButtonData(key, item) {\n    return {\n        classes: [\"section\", key, item.position],\n        id: item.id,\n        textContent: item.text\n    };\n}\n\n\nfunction createAndAppendButtons(buttonsData, container) {\n    /* iterates over an array of objects, each object includes the\n       button's text content and classes for the div the button is nested into */\n    buttonsData.forEach(data => { \n\n        // creates a button element and sets its text content to value provided in data.textContent\n        const button = createElement('button', {\n            id: data.id,\n            textContent: data.textContent});\n\n        /* creates a div element, and sets its classes by joining all class names \n           provided in data.classes with a space between them */\n        const buttonDiv = createElement('div', {className: data.classes.join(' ')});\n\n        buttonDiv.appendChild(button);\n\n        container.appendChild(buttonDiv);\n    });\n}\n\n\nfunction createAndAppendProjectsListAndField(projectsListData, listAttributesData, fieldAttributesData, container) {\n    // creates a div element and sets it classes\n    const listDiv = createElement('div', {className: \"section projects-list left\"});\n\n    // creates an ul ement\n    const list = createElement('ul');\n\n    const lastKey = Object.keys(projectsListData).pop();\n\n    // iterates over the projectsListData object\n    for (const key in projectsListData) { \n        const projectName = projectsListData[key];\n    // projectsListData.forEach((data, index) => {\n\n        // creates an img element and sets its src and alt attributes\n        const img = createElement('img', {\n            src: listAttributesData.image, \n            alt: listAttributesData.alt});\n\n        // creates a text node without the need for additional HTML features\n        const textNode = document.createTextNode(projectName);\n        // const textNode = document.createTextNode(data);\n\n        const projectsDiv = createElement('li', null, img, textNode);\n\n        projectsDiv.classList.add(key);\n\n        // projectsDiv.appendChild(img);\n        // projectsDiv.appendChild(textNode);\n\n        // adds an id attribute to the last element in the projectsListData array\n        // if (index === projectsListData.length - 1) {\n        //     projectsDiv.id = \"last-li\";\n        // }\n\n        if (key === lastKey) {\n            projectsDiv.id = \"last-li\";\n        }\n\n        list.appendChild(projectsDiv);\n    }\n    \n    listDiv.appendChild(list);\n\n    const projectFieldDiv = createElement('div');\n\n    // creates a label element and sets its for attribute to the value at index 0 of the fieldAttributesData object\n    const label = createElement('label', {htmlFor: Object.values(fieldAttributesData)[0]});\n\n    // creates a label element and sets its type, id, and placeholder attributes\n    const input = createElement('input', {\n        type: Object.values(fieldAttributesData)[1],\n        id: Object.values(fieldAttributesData)[2],\n        placeholder: Object.values(fieldAttributesData)[3]\n    });\n\n    projectFieldDiv.appendChild(label);\n    projectFieldDiv.appendChild(input);\n\n    listDiv.appendChild(projectFieldDiv);\n\n    container.appendChild(listDiv);\n}\n   \n\n// a prepareData function\n// function prepareTasksListData(key, item) {\n//     return {\n//         'task-edit': item[\"task-edit\"],\n//         'task-title': item[\"task-title\"],\n//         'task-description': item[\"task-description\"],\n//         'task-duedate': item[\"task-duedate\"],\n//         'priority-level': item[\"priority-level\"],\n//         'status': item[\"status\"]\n//     };\n// }\n\n\n// function prepareTasksTitleAndListData(key, item) {\n//     return {\n//         // classes: [\"section\", \"project-title\", item.position],\n//         // imageSrc: item.image,\n//         // imageAlt: item.alt,\n//         // textContent: item.text,\n//         // id: item['id'],\n//         'task-edit': item[\"task-edit\"],\n//         'task-title': item[\"task-title\"],\n//         'task-description': item[\"task-description\"],\n//         'task-duedate': item[\"task-duedate\"],\n//         'priority-level': item[\"priority-level\"],\n//         'status': item[\"status\"]\n//     };\n// }\n\n\nfunction createAndAppendTasksTitleAndList(projectData, container) {\n    // const titleDiv = createElement('div', {className: data.classes.join(' ')});\n\n    // const img = createElement('img', {\n    //     src: data.imageSrc, \n    //     alt: data.imageAlt\n    // });\n\n    // const textDiv = createElement('div', {\n    //     textContent: data.textContent,\n    //     id: data.id\n    // });\n\n    // titleDiv.appendChild(img);\n    // titleDiv.appendChild(textDiv);\n\n    // container.appendChild(titleDiv);\n\n    const tasksTitleData = projectData['Project'];\n    const titleDiv = createElement('div', {className: \"section project-title \" + tasksTitleData.position});\n    const img = createElement('img', {src: tasksTitleData.image, alt: tasksTitleData.alt});\n    const textDiv = createElement('div', {textContent: tasksTitleData.text, id: tasksTitleData.id});\n\n    titleDiv.appendChild(img);\n    titleDiv.appendChild(textDiv);\n\n    container.appendChild(titleDiv);\n\n    const tasksListDiv = createElement('div', {className: 'section tasks-list middle'});\n\n    for (let taskKey in projectData) {\n        if (taskKey === 'Project') continue;\n\n        const data = projectData[taskKey];\n\n        // creates a div element for \"Edit\"\n        const taskEditDiv = createElement('div', {\n            className: \"task-edit\",\n            textContent: data[\"task-edit\"]\n        });\n\n        taskEditDiv.addEventListener('click', function() {\n            populateFormFields(taskKey);\n        });\n\n        const taskTitleDiv = createElement('div', {\n            className: \"task-title\",\n            textContent: data[\"task-title\"]\n        })\n\n        // creates a div element for \"Task Description\"\n        const taskDescriptionDiv = createElement('div', {\n            className: \"task-description\",\n            textContent: data[\"task-description\"]\n        });\n\n        // creates a div element for \"Task Due Date\" and sets its color class based on the value of its priority-level property \n        const taskDueDateDiv = createElement('div', {\n            className: `task-duedate ${data[\"priority-level\"] === \"high\" ? \"red\" : data[\"priority-level\"] === \"medium\" ? \"yellow\" : \"green\"}`,\n            textContent: data[\"task-duedate\"]\n        });\n\n        // creates a div element for \"Priority Level\", and sets its classes, including hide  \n        const priorityLevelDiv = createElement('div', {\n            className: `priority-level hide`,\n            textContent: data[\"priority-level\"]\n        });\n\n        const statusDiv = createElement('div', {\n            className: `status hide`,\n            textContent: data[\"status\"]\n        });\n\n        const taskDiv = createElement('div', {\n            className: 'task',\n            id: taskKey\n        });\n\n        taskDiv.appendChild(taskEditDiv);\n        taskDiv.appendChild(taskTitleDiv);\n        taskDiv.appendChild(taskDescriptionDiv);\n        taskDiv.appendChild(taskDueDateDiv);\n        taskDiv.appendChild(priorityLevelDiv);\n        taskDiv.appendChild(statusDiv);\n\n        tasksListDiv.appendChild(taskDiv);\n    }\n    container.appendChild(tasksListDiv);\n}\n\n/*\nfunction createAndAppendTasksList(tasksData, container) {\n    const tasksListDiv = createElement('div', {className: 'section tasks-list middle'});\n\n    tasksData.forEach(data => {\n        // creates a div element for \"Edit\"\n        const taskEditDiv = createElement('div', {\n            className: \"task-edit\",\n            textContent: \"Edit\"\n        });\n\n        // creates a div element for \"Task Description\"\n        const taskDescriptionDiv = createElement('div', {\n            className: Object.keys(data)[0],\n            textContent: data[\"task-description\"]\n        });\n\n        // creates a div element for \"Task Due Date\" and sets its color class based on the value of its priority-level property \n        const taskDueDateDiv = createElement('div', {\n            className: `${Object.keys(data)[1]} ${data[\"priority-level\"] === \"high\" ? \"red\" : data[\"priority-level\"] === \"medium\" ? \"yellow\" : \"green\"}`,\n            textContent: data[\"task-duedate\"]\n        });\n\n        // creates a div element for \"Priority Level\", and sets its classes, including hide  \n        const priorityLevelDiv = createElement('div', {\n            className: `${Object.keys(data)[2]} hide`,\n            textContent: data[\"priority-level\"]\n        });\n\n        const taskDiv = createElement('div', {\n            className: 'task'\n        });\n\n        taskDiv.appendChild(taskEditDiv);\n        taskDiv.appendChild(taskDescriptionDiv);\n        taskDiv.appendChild(taskDueDateDiv);\n        taskDiv.appendChild(priorityLevelDiv);\n\n        tasksListDiv.appendChild(taskDiv);\n    });\n\n    container.appendChild(tasksListDiv);\n}\n*/\n\n\n// a prepareData function\nfunction prepareThreeTaskFieldsData(key, item) {\n    return {\n            class: key,\n            labelFor: item.for,\n            labelId: item[\"label-id\"],\n            labelTextContent: item[\"label-text\"],\n            inputType: item.type,\n            textareaName: item.name,\n            inputId: item[\"input-id\"],\n            textareaId: item[\"textarea-id\"]\n    };\n}\n\n\n// a prepareData function\nfunction preparePriorityTaskFieldData(key, item) {\n    return {\n            type: item.type,\n            name: item.name,\n            id: item.id,\n            value: item.value,\n            for: item.for,\n            \"label-text\": item[\"label-text\"],\n            class: item.class,\n            \"data-color\": item[\"data-color\"]\n    };\n}\n\n\nfunction createAndAppendTaskFields(threeTaskFieldsData, labelField, priorityTaskFieldData, container) {\n    const formDiv = createElement('div', {className: 'section task-details right'});\n    const form = createElement('form', {action: '', method: 'post', id: 'form'});\n\n    threeTaskFieldsData.forEach(data => {\n        const label = createElement('label', {\n            htmlFor: data.labelFor,\n            id: data.labelId,\n            textContent: data.labelTextContent\n        });\n\n        const taskFieldDiv = createElement('div', {className: data.class});\n\n        taskFieldDiv.appendChild(label);\n\n        // if the object has a key of inputType, create an input element and sets its properties as specified\n        if (data.inputType) {\n            const input = createElement('input', {\n                type: data.inputType, \n                id: data.inputId\n            });\n\n            taskFieldDiv.appendChild(input);\n        }\n\n        // if the object has a key of textareaName, create a textarea element and set its properties as specified\n        if (data.textareaName) {\n            const textarea = createElement('textarea', {\n                name: data.textareaName, \n                id: data.textareaId\n            });\n\n            taskFieldDiv.appendChild(textarea);\n        }\n\n        form.appendChild(taskFieldDiv);\n    });\n\n    // creates label element with \"Priority\" text content \n    const priorityTaskFieldLabel = createElement('label', {\n        htmlFor: labelField.for,\n        id: labelField[\"label-id\"],\n        textContent: labelField[\"label-text\"]\n    });\n\n    // creates div element to nest the Priority label into\n    const priorityTaskFieldDiv = createElement('div', {className: 'priority-field'});\n    priorityTaskFieldDiv.appendChild(priorityTaskFieldLabel);\n\n    // iterates through the priorityTaskFieldData array, and for each object, creates an input element and set its properties as specified\n    priorityTaskFieldData.forEach(data => {\n        const input = createElement('input', {\n            type: data.type,\n            name: data.name, \n            id: data.id,\n            value: data.value\n        });\n\n        // for each object, creates a label element and set its properties as specified\n        const otherLabel = createElement('label', {\n            htmlFor: data.for,\n            className: data.class,\n            textContent: data[\"label-text\"]\n        });\n\n        // for each label, sets the color to go in each radio input\n        otherLabel.dataset.color = data[\"data-color\"];\n\n        priorityTaskFieldDiv.appendChild(input);\n        priorityTaskFieldDiv.appendChild(otherLabel);\n    });\n\n    form.appendChild(priorityTaskFieldDiv);\n\n    formDiv.appendChild(form);\n    \n    container.appendChild(formDiv);\n}\n\n\nfunction createAndAppendStatusTaskField(statusTaskFieldData) {\n    const form = document.getElementById(\"form\");\n\n    // iterates through the options array inside the statusTaskFieldData object\n    const optionsElements = statusTaskFieldData.options.map(option => \n\n        // for each element in the options array, creates an option element and sets its properties as specified\n        createElement('option', {\n            value: option.value, \n            textContent: option.text\n        })\n    );\n\n    // creates a select element and sets its properties as specified, including the options\n    const select = createElement('select', {\n        name: statusTaskFieldData.name, \n        id: statusTaskFieldData[\"select-id\"]}, \n        ...optionsElements);\n\n    // creates a label element and sets its properties as specified\n    const label = createElement('label', {\n        htmlFor: statusTaskFieldData.for,\n        id: statusTaskFieldData[\"label-id\"],\n        textContent: statusTaskFieldData[\"label-text\"]\n    });\n\n    // creates a div element to nest the select, options, and label elements into\n    const statusTaskFieldDiv = createElement('div', {className: statusTaskFieldData.class}, label, select);\n\n    form.appendChild(statusTaskFieldDiv);\n}\n\n\nfunction switchStylesheet() {\n    var stylesheet = document.getElementById('stylesheetToSwitch');\n    if (stylesheet.href.endsWith('style2.css')) {\n        stylesheet.href = 'style.css';\n    }\n} \n\nfunction populateFormFields(taskId) {\n    const taskDiv = document.getElementById(taskId);\n    const taskTitle = taskDiv.querySelector('.task-title').textContent;\n\n    const taskDescription = taskDiv.querySelector('.task-description').textContent;\n    \n    let taskDueDate = taskDiv.querySelector('.task-duedate').textContent;\n\n    // convert taskDueDate from MM/DD/YYYY to YYYY-MM-DD\n    if (taskDueDate.includes('/')) {\n        const dateParts = taskDueDate.split('/');\n        taskDueDate = `${dateParts[2]}-${dateParts[0].padStart(2, '0')}-${dateParts[1].padStart(2, '0')}`;\n    }\n\n    const taskPriority = taskDiv.querySelector('.priority-level').textContent;\n    const taskStatus = taskDiv.querySelector('.status').textContent;\n\n    const eachTaskField = document.getElementById('each-task');\n    const descriptionField = document.getElementById('task-description');\n    const dueDateField = document.getElementById('task-duedate');\n    const priorityFields = document.getElementsByName('priority');\n\n    eachTaskField.value = taskTitle;\n    descriptionField.value = taskDescription;\n    dueDateField.value = taskDueDate;\n\n    for (let i = 0; i < priorityFields.length; i++) {\n        if (priorityFields[i].value === taskPriority) {\n            priorityFields[i].checked = true;\n            break;\n        }\n    }\n\n    const statusSelect = document.getElementById('status-dropdown');\n\n    statusSelect.value = taskStatus;\n}\n\nfunction createNewTask() {\n    switchStylesheet();\n\n    let eachTaskField = document.getElementById('each-task');\n    if (eachTaskField) {\n        eachTaskField.value = '';\n    }\n\n    let descriptionField = document.getElementById('task-description');\n    if (descriptionField) {\n        descriptionField = '';\n    }\n\n    let dueDateField = document.getElementById('task-duedate');\n    if (dueDateField) {\n        dueDateField.value = '';\n    }\n\n    let priorityFields = document.getElementsByName('priority');\n    for (let i = 0; i < priorityFields.length; i++) {\n        priorityFields[i].checked = false;\n    }\n\n    let statusSelect = document.getElementById('status-dropdown');\n    if (statusSelect) {\n        statusSelect.selectedIndex = 0;\n    }\n}\n\n\n\nconst Project1 = {\n    'Project': {\n        position: \"middle\",\n        image: \"./img/folder-arrow-down.svg\",\n        alt: \"arrow pointing right icon\",\n        text: \"Project 1\",\n        id: \"tasks-list-project\"\n    },\n    '0': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 1 Title\",\n        'task-description': \"Diam maecenas ultricies mi eget mauris pharetra et. Aliquam vestibulum morbi blandit cursus risus at ultrices.\",\n        'task-duedate': \"12/06/2023\",\n        'priority-level': \"high\",\n        'status': \"In Progress\"\n    },\n    '1': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 2 Title\",\n        'task-description': \"In fermentum et sollicitudin ac orci phasellus. Risus feugiat in ante metus dictum.\",\n        'task-duedate': \"12/15/2023\",\n        'priority-level': \"medium\",\n        'status': \"Complete\"\n    },\n    '2': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 3 Title\",\n        'task-description': \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n        'task-duedate': \"12/18/2023\",\n        'priority-level': \"medium\",\n        'status': \"In Progress\"\n    },\n    '3': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 4 Title\",\n        'task-description': \"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n        'task-duedate': \"01/04/2024\",\n        'priority-level': \"low\",\n        'status': \"Not Started\"\n    },\n    '4': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 5 Title\",\n        'task-description': \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\n        'task-duedate': \"01/17/2024\",\n        'priority-level': \"high\",\n        'status': \"In Progress\"\n    },\n    '5': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 6 Title\",\n        'task-description': \"Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        'task-duedate': \"01/23/2024\",\n        'priority-level': \"medium\",\n        'status': \"Not Started\"\n    }\n}\n\n\nconst Project2 = {\n    'Project': {\n        position: \"middle\",\n        image: \"./img/folder-arrow-down.svg\",\n        alt: \"arrow pointing right icon\",\n        text: \"Project 2\",\n        id: \"tasks-list-project\"\n    },\n    '0': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 1 Title\",\n        'task-description': \"Diam maecenas ultricies mi eget mauris pharetra et. Aliquam vestibulum morbi blandit cursus risus at ultrices.\",\n        'task-duedate': \"12/06/2023\",\n        'priority-level': \"high\",\n        'status': \"In Progress\"\n    },\n    '1': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 2 Title\",\n        'task-description': \"In fermentum et sollicitudin ac orci phasellus. Risus feugiat in ante metus dictum.\",\n        'task-duedate': \"12/15/2023\",\n        'priority-level': \"medium\",\n        'status': \"Complete\"\n    }\n}\n\nconst Project3 = {\n    'Project': {\n        position: \"middle\",\n        image: \"./img/folder-arrow-down.svg\",\n        alt: \"arrow pointing right icon\",\n        text: \"Project 3\",\n        id: \"tasks-list-project\"\n    },\n    '0': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 1 Title\",\n        'task-description': \"Diam maecenas ultricies mi eget mauris pharetra et. Aliquam vestibulum morbi blandit cursus risus at ultrices.\",\n        'task-duedate': \"12/06/2023\",\n        'priority-level': \"high\",\n        'status': \"In Progress\"\n    },\n    '1': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 2 Title\",\n        'task-description': \"In fermentum et sollicitudin ac orci phasellus. Risus feugiat in ante metus dictum.\",\n        'task-duedate': \"12/15/2023\",\n        'priority-level': \"medium\",\n        'status': \"Complete\"\n    },\n    '2': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 3 Title\",\n        'task-description': \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n        'task-duedate': \"12/18/2023\",\n        'priority-level': \"medium\",\n        'status': \"In Progress\"\n    },\n    '3': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 4 Title\",\n        'task-description': \"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n        'task-duedate': \"01/04/2024\",\n        'priority-level': \"low\",\n        'status': \"Not Started\"\n    }\n}\n\n\nconst Project4 = {\n    'Project': {\n        position: \"middle\",\n        image: \"./img/folder-arrow-down.svg\",\n        alt: \"arrow pointing right icon\",\n        text: \"Project 4\",\n        id: \"tasks-list-project\"\n    },\n    '0': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 1 Title\",\n        'task-description': \"Diam maecenas ultricies mi eget mauris pharetra et. Aliquam vestibulum morbi blandit cursus risus at ultrices.\",\n        'task-duedate': \"12/06/2023\",\n        'priority-level': \"high\",\n        'status': \"In Progress\"\n    },\n    '1': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 2 Title\",\n        'task-description': \"In fermentum et sollicitudin ac orci phasellus. Risus feugiat in ante metus dictum.\",\n        'task-duedate': \"12/15/2023\",\n        'priority-level': \"medium\",\n        'status': \"Complete\"\n    },\n    '2': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 3 Title\",\n        'task-description': \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n        'task-duedate': \"12/18/2023\",\n        'priority-level': \"medium\",\n        'status': \"In Progress\"\n    },\n    '3': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 4 Title\",\n        'task-description': \"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n        'task-duedate': \"01/04/2024\",\n        'priority-level': \"low\",\n        'status': \"Not Started\"\n    },\n    '4': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 5 Title\",\n        'task-description': \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\n        'task-duedate': \"01/17/2024\",\n        'priority-level': \"high\",\n        'status': \"In Progress\"\n    }\n}\n\nconst Project5 = {\n    'Project': {\n        position: \"middle\",\n        image: \"./img/folder-arrow-down.svg\",\n        alt: \"arrow pointing right icon\",\n        text: \"Project 5\",\n        id: \"tasks-list-project\"\n    },\n    '0': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 1 Title\",\n        'task-description': \"Diam maecenas ultricies mi eget mauris pharetra et. Aliquam vestibulum morbi blandit cursus risus at ultrices.\",\n        'task-duedate': \"12/06/2023\",\n        'priority-level': \"high\",\n        'status': \"In Progress\"\n    }\n}\n\n\nconst Project6 = {\n    'Project': {\n        position: \"middle\",\n        image: \"./img/folder-arrow-down.svg\",\n        alt: \"arrow pointing right icon\",\n        text: \"Project 6\",\n        id: \"tasks-list-project\"\n    },\n    '0': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 1 Title\",\n        'task-description': \"Diam maecenas ultricies mi eget mauris pharetra et. Aliquam vestibulum morbi blandit cursus risus at ultrices.\",\n        'task-duedate': \"12/06/2023\",\n        'priority-level': \"high\",\n        'status': \"In Progress\"\n    },\n    '1': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 2 Title\",\n        'task-description': \"In fermentum et sollicitudin ac orci phasellus. Risus feugiat in ante metus dictum.\",\n        'task-duedate': \"12/15/2023\",\n        'priority-level': \"medium\",\n        'status': \"Complete\"\n    },\n    '2': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 3 Title\",\n        'task-description': \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n        'task-duedate': \"12/18/2023\",\n        'priority-level': \"medium\",\n        'status': \"In Progress\"\n    },\n    '3': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 4 Title\",\n        'task-description': \"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n        'task-duedate': \"01/04/2024\",\n        'priority-level': \"low\",\n        'status': \"Not Started\"\n    },\n    '4': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 5 Title\",\n        'task-description': \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\n        'task-duedate': \"01/17/2024\",\n        'priority-level': \"high\",\n        'status': \"In Progress\"\n    },\n    '5': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 6 Title\",\n        'task-description': \"Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        'task-duedate': \"01/23/2024\",\n        'priority-level': \"medium\",\n        'status': \"Not Started\"\n    }\n}\n\n\nconst Project7 = {\n    'Project': {\n        position: \"middle\",\n        image: \"./img/folder-arrow-down.svg\",\n        alt: \"arrow pointing right icon\",\n        text: \"Project 7\",\n        id: \"tasks-list-project\"\n    },\n    '0': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 1 Title\",\n        'task-description': \"Diam maecenas ultricies mi eget mauris pharetra et. Aliquam vestibulum morbi blandit cursus risus at ultrices.\",\n        'task-duedate': \"12/06/2023\",\n        'priority-level': \"high\",\n        'status': \"In Progress\"\n    },\n    '1': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 2 Title\",\n        'task-description': \"In fermentum et sollicitudin ac orci phasellus. Risus feugiat in ante metus dictum.\",\n        'task-duedate': \"12/15/2023\",\n        'priority-level': \"medium\",\n        'status': \"Complete\"\n    }\n}\n\nconst Project8 = {\n    'Project': {\n        position: \"middle\",\n        image: \"./img/folder-arrow-down.svg\",\n        alt: \"arrow pointing right icon\",\n        text: \"Project 8\",\n        id: \"tasks-list-project\"\n    },\n    '0': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 1 Title\",\n        'task-description': \"Diam maecenas ultricies mi eget mauris pharetra et. Aliquam vestibulum morbi blandit cursus risus at ultrices.\",\n        'task-duedate': \"12/06/2023\",\n        'priority-level': \"high\",\n        'status': \"In Progress\"\n    },\n    '1': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 2 Title\",\n        'task-description': \"In fermentum et sollicitudin ac orci phasellus. Risus feugiat in ante metus dictum.\",\n        'task-duedate': \"12/15/2023\",\n        'priority-level': \"medium\",\n        'status': \"Complete\"\n    },\n    '2': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 3 Title\",\n        'task-description': \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n        'task-duedate': \"12/18/2023\",\n        'priority-level': \"medium\",\n        'status': \"In Progress\"\n    },\n    '3': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 4 Title\",\n        'task-description': \"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n        'task-duedate': \"01/04/2024\",\n        'priority-level': \"low\",\n        'status': \"Not Started\"\n    }\n}\n\n\nconst Project9 = {\n    'Project': {\n        position: \"middle\",\n        image: \"./img/folder-arrow-down.svg\",\n        alt: \"arrow pointing right icon\",\n        text: \"Project 9\",\n        id: \"tasks-list-project\"\n    },\n    '0': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 1 Title\",\n        'task-description': \"Diam maecenas ultricies mi eget mauris pharetra et. Aliquam vestibulum morbi blandit cursus risus at ultrices.\",\n        'task-duedate': \"12/06/2023\",\n        'priority-level': \"high\",\n        'status': \"In Progress\"\n    },\n    '1': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 2 Title\",\n        'task-description': \"In fermentum et sollicitudin ac orci phasellus. Risus feugiat in ante metus dictum.\",\n        'task-duedate': \"12/15/2023\",\n        'priority-level': \"medium\",\n        'status': \"Complete\"\n    },\n    '2': {\n        'task-edit': \"Edit\",\n        'task-title': \"Task 3 Title\",\n        'task-description': \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n        'task-duedate': \"12/18/2023\",\n        'priority-level': \"medium\",\n        'status': \"In Progress\"\n    }\n}\n\n\nconst projectMapping = {\n    Project1: Project1,\n    Project2: Project2,\n    Project3: Project3,\n    Project4: Project4,\n    Project5: Project5,\n    Project6: Project6,\n    Project7: Project7,\n    Project8: Project8,\n    Project9: Project9\n}\n\n\nfunction selectProject(container) {\n    for (let i = 1; i <= 9; i++) {\n        const projectTitleDiv = document.querySelector(`.p${i}`);\n        if (projectTitleDiv) {\n            projectTitleDiv.addEventListener('click', () => {\n                const projectData = projectMapping[`Project${i}`];\n                createAndAppendTasksTitleAndList(projectData, container);\n            });\n        }\n    }\n}\n\n\n\n\n//# sourceURL=webpack://todo-list/./src/page_load2.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;